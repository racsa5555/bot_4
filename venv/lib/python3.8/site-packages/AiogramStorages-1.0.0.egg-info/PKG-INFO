Metadata-Version: 2.1
Name: AiogramStorages
Version: 1.0.0
Summary: Save your data and states in aiogram bot.Aiogram-storages was created to extend the standard fsm_storage options in aiogram.
Home-page: https://github.com/DIMFLIX-OFFICIAL/AiogramStorages
Author: DIMFLIX
Author-email: dimflix.official@gmail.ru
License: MIT License
Download-URL: https://github.com/DIMFLIX-OFFICIAL/AiogramStorages/archive/refs/heads/main.zip
Description: ï»¿
        ![enter image description here](https://github.com/DIMFLIX-OFFICIAL/AiogramStorages/blob/main/banner.png?raw=true)
        # Save your data!
        
        **Aiogram-storages** was created to extend the standard fsm_storage options in **aiogram**.
        Our library supports such databases as:
        
        # Installation
        
            pip install AiogramStorages
        
        # PostgreSQL
        
        Support for storage with the **PostgreSQL** database is due to the **asyncpg** asynchronous library, which gives a **huge data processing speed**, and, accordingly, the bot itself.
        
        In order to use it, you need to create an instance of the **PGStorage** class, to which you need to pass the **required parameters (user, password, db_name).** You can also specify additional parameters (host, port).
        
        Next, this instance must be passed to the **Dispatcher.**
        ## Example
        
            from AiogramStorages.storages import PGStorage
            
            storage = PGStorage(username='YourUser', password='YourPassword', db_name='YourDbName')  
            dp = Dispatcher(bot, storage=storage)
        
        ## Warning
        
        By default, **PGStorage** creates three tables in your database named: **aiogram-states**, **aiogram-data**, **aiogram-buckets**.
        
        We **strongly recommend** that you do **not use these names as the name of the table**, otherwise there may be disagreements.
        
        
        
        # SQLiteStorage
        
        
        Support for storage with the **SQLite** database is due to the **aiosqlite** asynchronous library, which gives a **huge data processing speed**, and, accordingly, the bot itself.
        
        In order to use it, you need to create an instance of the **SQLiteStorage** class, to which you need to pass the **required parameters (db_path).**
        
        Next, this instance must be passed to the **Dispatcher.**
        ## Example
        
            from AiogramStorages.storages import SQLiteStorage
            
            storage = SQLiteStorage(db_path='your_path')  
            dp = Dispatcher(bot, storage=storage)
        
        ## Warning
        
        By default, **SQLiteStorage** creates three tables in your database named: **aiogram-states**, **aiogram-data**, **aiogram-buckets**.
        
        We **strongly recommend** that you do **not use these names as the name of the table**, otherwise there may be disagreements.
        
Platform: UNKNOWN
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python :: Implementation :: CPython
Description-Content-Type: text/markdown
